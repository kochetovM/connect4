{"version":3,"sources":["components/Square.js","components/Board.js","components/Window.js","App.js","reportWebVitals.js","reducers/Game.js","reducers/index.js","index.js"],"names":["Square","value","onClick","style","player","className","id","Board","newValues","map","square","i","e","Window","items","imgUrl","endGame","src","alt","connect","state","squares","counter","lastStep","dispatch","changeProp","turn","type","undoMove","newGame","props","useState","setTurnToggled","poemLines","setPoemLines","poem","setPoem","setEndGame","winner","setWinner","useEffect","axios","get","then","response","data","document","getElementsByClassName","display","checkbyHorizontal","way","row","Math","floor","checkbyVertical","checkbyDiagonal","row_current","abs","checkforWin","total","pop","rnTitleNr","random","undefined","wholeLine","lines","line","title","length","each","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initValues","step","Game","action","newValue","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4179ed05.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Square = ({ value, onClick }) => {\r\n\r\n    const style = value.player ? `squares ${value.player}` : `squares ${value.player}`;\r\n\r\n    return (\r\n        <button key={value.id} className={style} onClick={onClick} />\r\n    );\r\n};\r\n\r\nexport default Square;","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ newValues, onClick }) => (\r\n\r\n    <div className=\"board\">\r\n        {newValues.map((square, i) => (\r\n            <Square value={square} key={square.id} onClick={e => onClick(e, square.id)}/>\r\n        ))}\r\n    </div>\r\n\r\n);\r\n\r\nexport default Board;","import React from \"react\";\r\n\r\nconst Window = ({items, imgUrl, endGame, onClick }) => {\r\n\r\n    return (\r\n        <div className=\"modalWindow\">\r\n            <div className=\"Window\">\r\n                <img src={imgUrl} alt=\"Connect 4\" />\r\n                { endGame ? <p>Game Over</p> : '' }\r\n                { !items ? <p>Loading </p>  : <button onClick={onClick}>Start new game!</button> }\r\n            </div>\r\n        </div>\r\n    )    \r\n};\r\n\r\nexport default Window;","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport Board from './components/Board';\r\nimport Window from './components/Window';\r\nimport axios from 'axios'\r\n\r\nfunction App(props) {\r\n\r\n    const [turn, setTurnToggled] = useState(false);\r\n    \r\n    let [poemLines, setPoemLines] = useState([]);\r\n\r\n    const apiUrl = `https://poetrydb.org/author/Shakespeare`;\r\n\r\n    const imgUrl = `https://www.logolynx.com/images/logolynx/af/af99ef1a19d2f3ae098f4a25ee3a79c8.gif`;\r\n    \r\n    const [poem, setPoem] = useState(null);\r\n    \r\n    let [endGame, setEndGame] = useState(false);\r\n    let [winner, setWinner] = useState(\"\");\r\n\r\n    // takes data about poems\r\n    useEffect(() => {\r\n        axios.get(apiUrl)\r\n        .then(response => {\r\n             setPoem(response.data)\r\n        })\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        if(props.lastStep === 42){ //checks if board is full then pop up Game Over Msg\r\n            setEndGame(endGame = true);\r\n            document.getElementsByClassName('modalWindow')[0].style.display = \"block\"\r\n        }\r\n    })\r\n\r\n    const checkbyHorizontal = (id, way, player, row) => {\r\n        let row_current = Math.floor( (id+1)/7 - 0.01  );\r\n        if (row !== row_current ) return 0;\r\n\r\n        if (props.squares[id].player === player)\r\n            return 1 + checkbyHorizontal(id+way, way, player,row);\r\n        else return 0;\r\n    }\r\n    const checkbyVertical = (id, player) => {\r\n        if ( id < 42 && props.squares[id].player === player )\r\n            return 1 + checkbyVertical(id+7, player);\r\n        else return 0;\r\n    }\r\n    const checkbyDiagonal = (id, way, player, row) => {\r\n        let row_current = Math.floor( (id+1)/7 - 0.01  );\r\n        let step = Math.abs(row - row_current);\r\n\r\n        if (step !== 1 || id < 0 || id > 41 ) return 0;\r\n\r\n        if (props.squares[id].player === player)\r\n            return 1 + checkbyDiagonal(id+way, way, player, row_current);\r\n        else return 0;\r\n    }\r\n\r\n    const checkforWin = (id,player) => {\r\n\r\n        let row = Math.floor( (id+1)/7 - 0.01  );\r\n        let total = 1 + checkbyHorizontal(id-1, -1, player,row) + checkbyHorizontal(id+1, 1, player, row);\r\n        if (total > 3) return true;\r\n\r\n        total = 1 + checkbyVertical((id+7), player);\r\n        if (total > 3) return true;\r\n\r\n        total = 1 + checkbyDiagonal((id-6),-6, player, row) + checkbyDiagonal((id+6),6, player, row);\r\n        if (total > 3) return true;\r\n\r\n        total = 1 + checkbyDiagonal((id-8),-8, player, row) + checkbyDiagonal((id+8),8, player, row);\r\n        if (total > 3) return true;\r\n\r\n        return false;\r\n    }\r\n    \r\n    // handles clicks on squares, checks which squares can be clicked\r\n    const handleClick = (e, id) => {\r\n        if(!winner && !props.squares[id].player && (id > 34 || props.squares[id + 7].player === \"black\" || props.squares[id + 7].player === \"white\")){\r\n            // determines whose move is now\r\n            setTurnToggled(!turn)\r\n            // checks the data that is taken by api\r\n            if(poem){\r\n                let rnTitleNr = Math.floor(Math.random() * 161);\r\n\r\n                if (poem[rnTitleNr] !== undefined){\r\n                    let wholeLine = poem[rnTitleNr].lines.map((line) => line);\r\n\r\n                    setPoemLines( [...poemLines,{\r\n                        title: poem[rnTitleNr].title + ':',\r\n                        line: wholeLine\r\n                    }])\r\n                }\r\n            }\r\n\r\n            props.changeProp(id, turn)\r\n\r\n            if (checkforWin(id, props.squares[id].player)) {\r\n                if (props.squares[id].player === \"black\") setWinner(\"Player 1\");\r\n                else setWinner(\"Player 2\");\r\n            }\r\n\r\n        }\r\n    };\r\n    \r\n    // function that erases the lasts moves in the game\r\n    const moveBack = () => {\r\n        if(props.lastStep !== 0){\r\n            setTurnToggled(!turn)\r\n            poemLines.pop()\r\n            if (winner) setWinner(\"\");\r\n            props.undoMove()\r\n        }\r\n    };\r\n    const newGame = () =>{\r\n        document.getElementsByClassName('modalWindow')[0].style.display = \"block\";\r\n    }\r\n    \r\n    const modalWindowAction = () => {\r\n        document.getElementsByClassName('modalWindow')[0].style.display = \"none\";\r\n        // start a new game \r\n        setEndGame(endGame = false);\r\n        setWinner(\"\");\r\n        setPoemLines([]);\r\n        props.newGame();\r\n    };\r\n\r\n    return(\r\n        <div className=\"App container-fluid\">\r\n            <div className=\"gamename row\">\r\n                <h1>Poetic Connect 4</h1>\r\n            </div>\r\n\r\n            <div className=\"headrow row\">\r\n                <div className=\"col-2\">\r\n                    <button className=\"myButton\" onClick={moveBack}>Undo</button>\r\n                </div>\r\n\r\n                <div className=\"col-3 moveTurn\">\r\n                    {winner ?\r\n                        <p> {winner} Wins! </p>\r\n                        :\r\n                        <p>\r\n                            {!turn ? \"Player's 1 turn\" : \"Player's 2 turn\" }\r\n                        </p>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"newGameButton col-3\">\r\n                    <button className=\"myButton\" onClick={newGame}>New Game</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"boardcol col-6\">\r\n                    <Board newValues={props.squares} onClick={handleClick}/>\r\n                </div>\r\n\r\n                <div className=\"poetry col-3\">\r\n                {poemLines.length ?\r\n                    <div>\r\n                        <h5> -> William Shakespeare </h5>\r\n\r\n                        <div className=\"title\">\r\n                            <p>{ poemLines[poemLines.length-1].title }</p>\r\n                        </div>\r\n                        <div className=\"poetryBox\">\r\n                                {poemLines[poemLines.length - 1].line.map((each, id) => (\r\n                                    <div key={id}>\r\n                                        <p>{ each }</p>\r\n                                    </div>\r\n                                ))\r\n                                }\r\n                        </div>\r\n                    </div>\r\n                     :\r\n                     <div>\r\n                         <h5>-> William Shakespeare</h5>\r\n                     </div>\r\n                }\r\n                </div>\r\n            </div>\r\n            <Window items={poem} imgUrl={imgUrl} endGame={endGame} onClick={modalWindowAction} />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        squares: state.counter.value,\r\n        lastStep: state.counter.lastStep\r\n    }\r\n}\r\n\r\n// sending data to reducers/Game to make a new move(changeProp) and undo the previous one(undoMove)\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n       changeProp: (id, turn) => { dispatch({ type: 'CHANGE_SQUARE', id: id, turn: turn }) },\r\n       undoMove: () => { dispatch({ type: 'UNDO_MOVE' }) },\r\n       newGame: () => { dispatch({ type: 'NEW_GAME' }) }\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initValues = {\r\n   value: [\r\n      { id: 0, player: 0, step: 0 },\r\n      { id: 1, player: 0, step: 0 },\r\n      { id: 2, player: 0, step: 0 },\r\n      { id: 3, player: 0, step: 0 },\r\n      { id: 4, player: 0, step: 0 },\r\n      { id: 5, player: 0, step: 0 },\r\n      { id: 6, player: 0, step: 0 },\r\n      { id: 7, player: 0, step: 0 },\r\n      { id: 8, player: 0, step: 0 },\r\n      { id: 9, player: 0, step: 0 },\r\n      { id: 10, player: 0, step: 0 },\r\n      { id: 11, player: 0, step: 0 },\r\n      { id: 12, player: 0, step: 0 },\r\n      { id: 13, player: 0, step: 0 },\r\n      { id: 14, player: 0, step: 0 },\r\n      { id: 15, player: 0, step: 0 },\r\n      { id: 16, player: 0, step: 0 },\r\n      { id: 17, player: 0, step: 0 },\r\n      { id: 18, player: 0, step: 0 },\r\n      { id: 19, player: 0, step: 0 },\r\n      { id: 20, player: 0, step: 0 },\r\n      { id: 21, player: 0, step: 0 },\r\n      { id: 22, player: 0, step: 0 },\r\n      { id: 23, player: 0, step: 0 },\r\n      { id: 24, player: 0, step: 0 },\r\n      { id: 25, player: 0, step: 0 },\r\n      { id: 26, player: 0, step: 0 },\r\n      { id: 27, player: 0, step: 0 },\r\n      { id: 28, player: 0, step: 0 },\r\n      { id: 29, player: 0, step: 0 },\r\n      { id: 30, player: 0, step: 0 },\r\n      { id: 31, player: 0, step: 0 },\r\n      { id: 32, player: 0, step: 0 },\r\n      { id: 33, player: 0, step: 0 },\r\n      { id: 34, player: 0, step: 0 },\r\n      { id: 35, player: 0, step: 0 },\r\n      { id: 36, player: 0, step: 0 },\r\n      { id: 37, player: 0, step: 0 },\r\n      { id: 38, player: 0, step: 0 },\r\n      { id: 39, player: 0, step: 0 },\r\n      { id: 40, player: 0, step: 0 },\r\n      { id: 41, player: 0, step: 0 }\r\n   ],\r\n   lastStep: 0\r\n}\r\n\r\n\r\nconst Game = (state = initValues, action) => {\r\n\r\n   if (action.type === 'CHANGE_SQUARE') {\r\n\r\n      let newValue = state.value.map((value,i) => {\r\n         if (action.id === i && value.player === 0){\r\n               value.step = state.lastStep + 1;\r\n               if(action.turn === false) value.player = 'black';\r\n               else value.player = 'white';\r\n         }\r\n         return value;\r\n      });\r\n\r\n      return {\r\n         ...state,\r\n         value: newValue,\r\n         lastStep: state.lastStep + 1\r\n      }\r\n   }\r\n\r\n   else if (action.type === 'UNDO_MOVE'){\r\n      let lastStep = state.lastStep;\r\n\r\n      let newValue = state.value.map((value) => {\r\n         if(state.lastStep !== 0 && lastStep === value.step){\r\n            value.step = 0;\r\n            value.player = 0;\r\n            state.lastStep = lastStep - 1;\r\n         }\r\n         return value;\r\n      });\r\n      return {\r\n         ...state,\r\n         value: newValue\r\n      }\r\n   }\r\n   if (action.type === 'NEW_GAME'){\r\n      let newValue = state.value.map((value,i) => {\r\n         value.step = 0;\r\n         value.player = 0;\r\n         return value;\r\n      });\r\n      return {\r\n         ...state,\r\n         value: newValue,\r\n         lastStep: 0\r\n      }\r\n   }\r\n   return state;\r\n}\r\n\r\nexport default Game;\r\n","import Game from './Game';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n  counter: Game\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport allReducers from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}